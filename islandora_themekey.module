<?php

/**
 * @file
 * Contains hooks implemented by Islandora Themekey.
 */

/**
 * Implements hook_themekey_properties().
 */
function islandora_themekey_themekey_properties() {
  $attributes = array();
  $attributes['islandora:is_member_of_collection'] = array(
    'description' => t('Islandora object is member of the specified collection; for example, "islandora:bookCollection".'),
    'validator' => 'islandora_themekey_validator_ismemberofcollection',
    'file' => 'islandora_themekey_validators.inc',
    'page cache' => THEMEKEY_PAGECACHE_SUPPORTED,
  );
  $attributes['islandora:has_content_model'] = array(
    'description' => t('Islandora object has the specified content model; for example, "islandora:sp_large_image_cmodel".'),
    'validator' => 'islandora_themekey_validator_hascontentmodel',
    'file' => 'islandora_themekey_validators.inc',
    'page cache' => THEMEKEY_PAGECACHE_SUPPORTED,
  );
  $attributes['islandora:has_namespace'] = array(
    'description' => t('Islandora object has the specified namespace; for example, "newcanadian".'),
    'validator' => 'islandora_themekey_validator_hasnamespace',
    'file' => 'islandora_themekey_validators.inc',
    'page cache' => THEMEKEY_PAGECACHE_SUPPORTED,
  );

  // Mapping functions.
  $maps = array();

  $maps[] = array(
    'src' => 'system:dummy',
    'dst' => 'islandora:is_member_of_collection',
    'callback' => 'islandora_themekey_is_member_of_collection',
    'file' => 'includes/islandora_themekey_collection.inc',
  );

  return array('attributes' => $attributes, 'maps' => $maps);
}

/**
 * Implements hook_themekey_global().
 */
function islandora_themekey_themekey_global() {
  $parameters = array();
  // Get the PID, and if it appears to be an alias, get the
  // corrsponding PID.
  if (count(arg()) > 1) {
    module_load_include('inc', 'islandora', 'includes/utilities');
    $pid = arg(2);
    if (!islandora_is_valid_pid($pid)) {
      // Check the url_alias table to see if there's an entry there.
      $pid = drupal_get_normal_path(current_path());
    }
    $islandora_object = islandora_object_load($pid);

    // islandora:has_content_model property.
    if ($islandora_object) {
      $object_cmodel_pids = $islandora_object->models;
      if (count($object_cmodel_pids) > 0) {
        $parameters['islandora:has_content_model'] = $object_cmodel_pids;
      }
    }

    // islandora:has_namespace property.
    if ($islandora_object) {
      $namespace = substr($pid, 0, strpos($pid, ':'));
      $parameters['islandora:has_namespace'] = $namespace;
    }

  }
  return $parameters;
}
