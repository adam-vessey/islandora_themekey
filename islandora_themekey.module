<?php

/**
 * @file
 * Contains hooks implemented by Islandora Themekey.
 */

/**
 * Implements hook_themekey_properties().
 */
function islandora_themekey_themekey_properties() {
  $attributes = array();
  $attributes['islandora:is_member_of_collection'] = array(
    'description' => t('Islandora object is member of the specified collection; for example, "islandora:bookCollection".'),
    'validator' => 'islandora_themekey_validator_ismemberofcollection',
    'file' => 'islandora_themekey_validators.inc',
    'page cache' => THEMEKEY_PAGECACHE_SUPPORTED,
  );
  $attributes['islandora:has_content_model'] = array(
    'description' => t('Islandora object has the specified content model; for example, "islandora:sp_large_image_cmodel".'),
    'validator' => 'islandora_themekey_validator_hascontentmodel',
    'file' => 'islandora_themekey_validators.inc',
    'page cache' => THEMEKEY_PAGECACHE_SUPPORTED,
  );
  $attributes['islandora:has_namespace'] = array(
    'description' => t('Islandora object has the specified namespace; for example, "newcanadian".'),
    'validator' => 'islandora_themekey_validator_hasnamespace',
    'file' => 'islandora_themekey_validators.inc',
    'page cache' => THEMEKEY_PAGECACHE_SUPPORTED,
  );

  return array('attributes' => $attributes, 'maps' => array());
}

/**
 * Implements hook_themekey_global().
 */
function islandora_themekey_themekey_global() {
  $parameters = array();
  // Get the PID, if there is one. @todo: Accommodate paths that do not
  // contain an explicit PID, like those generated by Islandora Pathauto.
  if (count(arg()) > 1) {
    $pid = arg(2);
    $islandora_object = islandora_object_load($pid);

    // islandora:is_member_of_collection property.
    if ($islandora_object) {
      $collections = $islandora_object->relationships->get(FEDORA_RELS_EXT_URI, 'isMemberOfCollection');
      // The root collection PID will be a member of 0 collections, so we need
      // to check for it.
      if (count($collections) > 0) {
        $collection_pids = array();
        foreach ($collections as $collection) {
          $collection_pids[] = $collection['object']['value'];
        }
        $parameters['islandora:is_member_of_collection'] = $collection_pids;
      }
      else {
        // If the object is a book page or a newspaper issue, query the RI
        // to get its ancestor collection.
        $object_cmodel_pids = $islandora_object->models;
        if ($object_cmodel_pids[0] == 'islandora:newspaperIssueCModel'
          || $object_cmodel_pids[0] == 'islandora:pageCModel') {
          $query = <<<EOQ
            select ?collection from <#ri> where {
              # Get the collection that book pages and newspaper issues belong to.
              <info:fedora/$pid> <fedora-rels-ext:isMemberOf> ?parent .
              ?parent <fedora-rels-ext:isMemberOfCollection> ?collection .
            }
EOQ;
          $connection = islandora_get_tuque_connection();
          $results = $connection->repository->ri->sparqlQuery($query, 1);
          $collection_pid = $results[0]['collection']['value'];
          $parameters['islandora:is_member_of_collection'] = array($collection_pid);
        }
        // If the object is a newspaper page, query the RI to get the
        // its ancestor collection.
        if ($object_cmodel_pids[0] == 'islandora:newspaperPageCModel') {
          $query = <<<EOQ
            select ?collection from <#ri> where {
              # Get the collection that newspaper pages belong to.
              <info:fedora/$pid> <fedora-rels-ext:isMemberOf> ?issue .
              ?issue <fedora-rels-ext:isMemberOf> ?newspaper .
              ?newspaper <fedora-rels-ext:isMemberOfCollection> ?collection .
            }
EOQ;
          $connection = islandora_get_tuque_connection();
          $results = $connection->repository->ri->sparqlQuery($query, 1);
          $collection_pid = $results[0]['collection']['value'];
          $parameters['islandora:is_member_of_collection'] = array($collection_pid);
        }
      }
    }

    // islandora:has_content_model property.
    if ($islandora_object) {
      $object_cmodel_pids = $islandora_object->models;
      if (count($object_cmodel_pids) > 0) {
        $parameters['islandora:has_content_model'] = $object_cmodel_pids;
      }
    }

    // islandora:has_namespace property.
    if ($islandora_object) {
      $namespace = substr($pid, 0, strpos($pid, ':'));
      $parameters['islandora:has_namespace'] = $namespace;
    }

  }
  return $parameters;
}
