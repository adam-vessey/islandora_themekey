<?php

/**
 * @file
 * Contains hooks implemented by Islandora Themekey.
 */

/**
 * Implements hook_themekey_properties().
 */
function islandora_themekey_themekey_properties() {
  $attributes = array();
  $attributes['islandora:ismemberofcollection'] = array(
    'description' => t('Islandora object is member of collection'),
    'validator' => 'islandora_themekey_validator_ismemberofcollection',
    'file' => 'islandora_themekey_validators.inc',
    'page cache' => THEMEKEY_PAGECACHE_SUPPORTED,
  );
  $attributes['islandora:hasnamespace'] = array(
    'description' => t('Islandora object has namespace'),
    'validator' => 'islandora_themekey_validator_hasnamespace',
    'file' => 'islandora_themekey_validators.inc',
    'page cache' => THEMEKEY_PAGECACHE_SUPPORTED,
  );

  return array('attributes' => $attributes, 'maps' => array());
}

/**
 * Implements hook_themekey_global().
 */
function islandora_themekey_themekey_global() {
  $parameters = array();
  // Get the PID, if there is one. @todo: Accommodate paths that do not
  // contain an explicit PID, like those generated by Islandora Pathauto.
  if (count(arg()) > 1) {
    $pid = arg(2);
    $islandora_object = islandora_object_load($pid);

    // islandora:ismemberofcollection property.
    if ($islandora_object) {
      $collections = $islandora_object->relationships->get(FEDORA_RELS_EXT_URI, 'isMemberOfCollection');
      // The root collection PID will be a member of 0 collections, so we need to
      // check for it.
      if (count($collections) > 0) {
        // We need to check against an array (and restrict valid operators
        // to * and !*) to support membership in multiple collections.
        $collection_pids = array();
        foreach ($collections as $collection) {
          $collection_pids[] = $collection['object']['value'];
        }
        $parameters['islandora:ismemberofcollection'] = $collection_pids;
      }
    }

    // islandora:hasnamespace property.
    if ($islandora_object) {
      $namespace = substr($pid, 0, strpos($pid, ':'));
      $parameters['islandora:hasnamespace'] = $namespace;
    }


  }
  return $parameters;
}
